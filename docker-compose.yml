services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      ETH_HOST: anvil
      ETH_PORT: "8545"
    volumes:
      - .:/usr/src/app
      - cargo_disk:/usr/local/cargo
    depends_on:
      - db
      - anvil
      - minio
    # Initialize git submodules inside the mounted workspace (so the
    # `ethereum/contracts/lib/openzeppelin-contracts` submodule is fetched on
    # first run). After initializing submodules, keep the container alive.
    command: sh -c 'git submodule update --init --recursive || true; sleep infinity'

  db:
    image: postgres:latest
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  minio:
    build:
      context: .
      dockerfile: docker/minio.Dockerfile
    command: server /data --console-address ":9001"
    env_file:
      - .env
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"

  anvil:
    image: ghcr.io/foundry-rs/foundry:nightly
    entrypoint: ["/anvil-entrypoint.sh"]
    env_file:
      - .env
    environment:
      ANVIL_IP_ADDR: 0.0.0.0
    ports:
      - "8545:8545"
    volumes:
      - anvil_state:/anvil
      - ./scripts/anvil-entrypoint.sh:/anvil-entrypoint.sh:ro
    user: root
    stop_signal: SIGINT
    stop_grace_period: 15s

volumes:
  postgres_data:
  cargo_disk:
  minio_data:
  anvil_state:
